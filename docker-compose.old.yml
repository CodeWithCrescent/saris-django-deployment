# version: '3.9'

services:
  db-genz:
    image: bitnami/postgresql:15.6.0
    container_name: saris-db
    restart: unless-stopped
    volumes:
      - postgres_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_DATABASE=${DATABASE_NAME}
      - POSTGRESQL_USERNAME=${DATABASE_USER}
      - POSTGRESQL_PASSWORD=${DATABASE_PASSWORD}
      - ALLOW_EMPTY_PASSWORD=no
    ports:
      - "${DB_PORT}:${DATABASE_PORT}"
    networks:
      - traefik
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /opt/bitnami/postgresql/tmp
    cap_drop:
      - ALL
    user: "1001:1001"

  api:
    image: ghcr.io/zalongwa-technologies/saris-python:gen-z
    container_name: saris-django
    entrypoint: ["/app/entrypoint.sh"]
    volumes:
      - ./entrypoint.sh:/app/entrypoint.sh
      - media_volume:/app/media
      - static_volume:/app/staticfiles
    ports:
      - "${API_PORT}:${API_CONTAINER_PORT}"
    env_file:
      - .env
    depends_on:
      - db-genz
    labels:
      - traefik.enable=true

      - traefik.http.routers.api.rule=(Host(`sarisdemo.saris.info.tz`) || Host(`py.saris.info.tz`)) && (PathPrefix(`/api/v1`) || PathPrefix(`/media`) || PathPrefix(`/schema`))
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.media.rule=PathPrefix(`/api/media`)
      - traefik.http.routers.media.service=media
      - traefik.http.routers.api.tls.certresolver=production
      - traefik.http.routers.api.priority=20
      - traefik.http.services.api.loadbalancer.server.port=${API_CONTAINER_PORT}

      - com.centurylinklabs.watchtower.enable=true
    networks:
      - traefik

  nextjs:
    image: ghcr.io/zalongwa-technologies/saris-react-frontend:new
    container_name: saris-nextjs
    restart: unless-stopped
    ports:
      - "${NEXT_PUBLIC_PORT:-3500}:3500"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    depends_on:
      - api
      - db-genz
    labels:
      - traefik.enable=true

      # General frontend routing
      - traefik.http.routers.frontend.rule=Host(`sarisdemo.saris.info.tz`) || Host(`py.saris.info.tz`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls.certresolver=production
      - traefik.http.routers.frontend.priority=10
      - traefik.http.services.frontend.loadbalancer.server.port=3500

      # Watchtower
      - com.centurylinklabs.watchtower.enable=true

    networks:
      - traefik

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower__
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.docker/config.json:/config.json
    environment:
      - DOCKER_CONFIG=/
    command: --cleanup --interval 30 --label-enable

volumes:
  postgres_data:
  media_volume:
  static_volume:

networks:
  traefik:
    external: true
